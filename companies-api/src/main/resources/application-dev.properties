spring.datasource.url=jdbc:postgresql://localhost:5432/agreg
spring.datasource.username=root
spring.datasource.password=12345
spring.jpa.show-sql=true
spring.jpa.generate-ddl=true
spring.jpa.hibernate.ddl-auto=none

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database=postgresql
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQL10Dialect

#KAFKA
spring.kafka.consumer.bootstrap-servers = localhost:9092
spring.kafka.consumer.group-id=group_id
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.kafka.producer.bootstrap-servers = localhost:9092
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer


#SPRING-CLOUD
server.port = 8081
spring.application.name=api-companies
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
logging.pattern.console=%C{1.} [%-5level] %d{HH:mm:ss} - %msg%n

keycloak.realm =java
keycloak.auth-server-url =http://localhost:8080/auth
keycloak.public-client=true
keycloak.bearer-only=true
keycloak.resource = spring

item.feign.url=http://localhost:8082/api